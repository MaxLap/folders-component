%div{"ng-if" => "tag"}
  .self{"draggable" => "true", "is-draggable" => "!tag.master && tag.content_type != 'SN|SmartTag'", "drop" => "onDrop", "tag-id" => "tag.uuid", "ng-click" => "selectTag()", "ng-class" => "{'selected' : tag.selected}"}
    .tag-info.body-text-color{"ng-class" => "'level-' + generationForTag(tag)"}
      .circle.small{"ng-class" => "circleClassForTag(tag)"}

      .title{"ng-if" => "!tag.dummy && !tag.editing"}
        {{tag.displayTitle}}
      %input.title{"ng-if" => "!tag.dummy && tag.editing", "mb-autofocus" => "true", "should-focus" => "true", "ng-model" => "tag.displayTitle",
      "ng-keyup" => "$event.keyCode == 13 && saveTagRename(tag)"}

      .hover-menu{"ng-if" => "!tag.dummy && !tag.editing && tag.selected"}
        %button.half.danger{"ng-if" => "!tag.master", "ng-click" => "removeTag(tag); $event.stopPropagation();"} â€“
        %button{"ng-click" => "addChild($event, tag);"} +

      .new-tag-form{"ng-if" => "tag.dummy"}
        %input{"placeholder" => "", "mb-autofocus" => "true", "should-focus" => "true", "ng-model" => "tag.content.title",
        "ng-keyup" => "$event.keyCode == 13 && saveNewTag(tag)", "ng-blur" => "saveNewTag(tag)"}

  %div{"ng-repeat" => "child in tag.children"}
    .tag-tree{"ng-if" => "!child.deleted", "tag" => "child", "change-parent" => "changeParent()",
    "on-select" => "onSelect()", "create-tag" => "createTag()", "save-tags" => "saveTags()", "delete-tag" => "deleteTag()"}
